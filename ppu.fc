use * from nes;

options( bank: -1 );

include( "ppu.asm" );

var vsync_flag:int;
var ctrl1_bak:int;// = 0b10000000;
var ctrl2_bak:int;// = 0b00011110;
var scroll1:int;
var scroll2:int;

const HORIZONTAL = 0b00000000;
const VERTICAL   = 0b01000000;
const ATTRIBUTE  = 0b10000000;

const GR_MAX = 8;
var gr_idx:int;
var gr_to_buf:int16[GR_MAX];
var gr_from_buf:int*[GR_MAX];
var gr_size_buf:int[GR_MAX];
var gr_flag_buf:int[GR_MAX];
var gr_sprite_idx:int;
var gr_sprite_buf:int[256] options (address:0x0700);
var gr_buf:int[256];
var gr_buf_idx:int;

var put_to:int16;
var put_from:int* options (address:0x60);
var put_size:int;
var interrupt_i:int;

// IRQ関連
var irq_counter:int;
var irq_setup:void() options( address: 0x62 );
var irq_next:uint16 options( address: 0x64 );

var on_vsync:void() options( address: 0x78 );
var locked:int;

var on_wait_vsync:void();

function null_func():void{}

function init():void
{
	irq_setup = null_func;
	on_vsync = null_func;
	on_wait_vsync = null_func;
	locked = 1;
}

function wait_vsync():void
{
	wait_vsync_with_flag(1);
}

function wait_vsync_with_flag(flag:int):void
{
	// PPU_CTRL2 = 0b00010110; // for debug (profiling)
	if( flag != 2 ){
		while( gr_sprite_idx < 255 ){
			gr_sprite_buf[gr_sprite_idx] = 255;
			gr_sprite_idx += 1;
		}
	}
	vsync_flag = flag;
	while( vsync_flag ){}
	gr_buf_idx = 0;
	on_wait_vsync();
}

function lock():void
{
	PPU_CTRL1 = 0b10000000;
	PPU_CTRL2 = 0b00000000;
	locked = 1;
}

function unlock():void
{
	PPU_CTRL1 = 0b10000000;
	locked = 0;
	wait_vsync();
}

function put_in_lock(addr:int16, _from:int*, size:int ):void;

function fill_in_lock(addr:int16, size:int16, n:int):void;

function put(addr:int16, _from:int*, size:int, flag:int ):void
{
	while( gr_idx >= GR_MAX ){
		vsync_flag = 2;
		while( vsync_flag ){}
	}
	gr_from_buf[gr_idx] = _from;
	gr_to_buf[gr_idx] = addr;
	gr_size_buf[gr_idx] = size;
	gr_flag_buf[gr_idx] = flag;
	gr_idx += 1;
}

function alloc(size:int):int*
{
	var old = gr_buf_idx;
	gr_buf_idx += size;
	return &gr_buf[old];
}

function pos( x:int, y:int ):int16;

function sprite( x:int, y:int, pat:int, mode:int ):void;

function wait(n:int):void
{
	while( n ){
		var i:int = 55;
		while( i ){
			var j:int = 255;
			while( j ){
				j -= 1;
			}
			i -= i;
		}
		n -= 1;
	}
}
